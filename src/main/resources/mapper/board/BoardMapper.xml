<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.SideProject.GALE.mapper.board.BoardMapper">

	<!-- 
	<select id="GetLikePopularList" parameterType="int" resultType="Map">
		SELECT idx, category, userid, regdate, locationname, locationaddress, content, likes
		FROM board
		ORDER BY likes DESC
		LIMIT 20
	</select>
	-->
	<select id="GetCategoryBoardData" parameterType="int" resultType="com.SideProject.GALE.model.board.BoardDto">
		SELECT idx, category, userid, regdate, locationname, locationaddress, content, likes
		FROM board
		ORDER BY likes DESC
		LIMIT 20
	</select>
	

	<insert id="Write" parameterType="com.SideProject.GALE.model.board.BoardDto"  useGeneratedKeys="true" keyProperty="board_number">
 		<selectKey resultType="Integer" keyProperty="board_number" order="BEFORE">
			SELECT IFNULL( MAX(board_number)+1, 1 ) FROM board
		</selectKey>
		INSERT INTO board (board_category, board_number, userid, regdate, locationname, locationaddress,
			longitude, latitue)
			VALUES (
			#{board_category}, #{board_number}, #{userid}, #{regdate}, #{locationname}, #{locationaddress},
			#{longitude}, #{latitue} )
	</insert>
	
	
	<select id="GetBoardUserid" parameterType="int" resultType="String">
		SELECT userid
		FROM board
		WHERE board_number = #{board_Number}
	</select>
	
	
	<select id="Read" parameterType="int" resultType="com.SideProject.GALE.model.board.BoardReadDto">
		SELECT 
			b.*,
			COALESCE(AVG(br.satisfaction), 0) AS satisfaction,
       		COALESCE(AVG(br.service), 0) AS service,
       		COALESCE(AVG(br.price), 0) AS price,
       		COALESCE(AVG(br.congestion), 0) AS congestion,
       		COALESCE(AVG(br.accessibility), 0) AS accessibility,
       		COUNT(br.board_category) AS reviewCount,
       		 f.order_number AS imageCount
		FROM board b
		LEFT OUTER JOIN board_review br ON b.board_category = br.board_category
		LEFT OUTER JOIN (
    		SELECT board_category, board_number, MAX(order_number) AS order_number
    		FROM files
    		GROUP BY board_category, board_number
		) f ON b.board_category = f.board_category AND b.board_number = f.board_number
		WHERE b.board_number = #{board_Number}
		GROUP BY b.board_number;
	</select>

	
	<update id="Update" parameterType="com.SideProject.GALE.model.board.BoardDto">
		UPDATE board
		SET board_category = #{board_category}, locationname = #{locationname}, locationaddress = #{locationaddress},
					longitude = #{longitude}, latitue = #{latitue}
		WHERE board_number=#{board_number} AND userid=#{userid}
	</update>
	
	
	<delete id="Delete" parameterType="int">
	 	DELETE board, files
		FROM board
		LEFT OUTER JOIN files ON board.board_number = files.board_number
		WHERE board.board_number = #{board_Number}
 	</delete>
 	
 	
 	<!--Review-->
 	<insert id="Write_Review" parameterType="com.SideProject.GALE.model.board.BoardReviewDto" useGeneratedKeys="true" keyProperty="board_review_number">
 		<selectKey resultType="Integer" keyProperty="board_review_number" order="BEFORE">
			SELECT IFNULL( MAX(board_review_number)+1, 1 ) FROM board_review
		</selectKey>
		INSERT INTO board_review (board_review_number, board_number, userid, regdate, content,
			 satisfaction, service, price, congestion, accessibility)
			VALUES (
			#{board_review_number}, #{board_number}, #{userid}, #{regdate}, 
			#{content}, #{satisfaction}, #{service}, #{price}, #{congestion}, #{accessibility} )
	</insert>
	
	
	<select id="Read_BoardReviewPagingList" parameterType="java.util.HashMap" resultType="com.SideProject.GALE.model.board.BoardReviewDto">
    	SELECT *
    	FROM board_review
    	WHERE board_number = #{board_Number}
    	ORDER BY board_review_number DESC
    	LIMIT #{calculationCursor}, 5
	</select>
	
	
	<select id="GetBoardReviewUserid" parameterType="int" resultType="String">
		SELECT userid
		FROM board_review
		WHERE board_review_number = #{board_Review_Number}
	</select>
	
	
	<select id="Read_Review" parameterType="int" resultType="com.SideProject.GALE.model.board.BoardReviewReadDto">
		SELECT
			br.userid, br.regdate, br.content, br.satisfaction,
			br.service, br.price, br.congestion, br.accessibility,
			(SELECT MAX(order_number) FROM files_review WHERE board_review_number = br.board_review_number) AS imageCount
		FROM board_review br
		WHERE br.board_review_number = #{board_Review_Number}
	</select>


 	<delete id="Delete_Review" parameterType="int">
 		DELETE board_review, files_review
		FROM board_review
		LEFT JOIN files_review ON board_review.board_review_number = files_Review.board_review_number
		WHERE board_review.board_review_number = #{board_Review_Number}
	</delete>
	
	<insert id="Report_Review" parameterType="com.SideProject.GALE.model.board.ReportReviewDto">
		<selectKey resultType="Integer" keyProperty="report_number" order="BEFORE">
			SELECT IFNULL( MAX(report_number)+1, 1 ) FROM report_review
		</selectKey>
		INSERT INTO report_review
		(report_number, reporter_userid, board_review_number, report_category, content)
		VALUES
		(#{report_number}, #{reporter_userid}, #{board_review_number}, #{report_category}, #{content})
	</insert>
	
</mapper>